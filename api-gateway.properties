#Indicando el puerto que estará utilizando al aplicación
# el valor en 0, Spring Boot toma un puerto aleatorio.
server.port = 8080

#Configuración para el registro en Eureka indicando la dirección
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true


# Exponiendo los endpoints
management.endpoints.web.exposure.include=*

# Configurando la información del servidor perimetral
# el nombre del servicio es directamente referenciado y se obtiene desde el servidor
# Eureka. Es es el nombre que utilizamos en la propiedad spring.application.name
zuul.routes.user.service-id=user-microservice
zuul.routes.user.path=/user/**
zuul.routes.event.service-id=event-microservice
zuul.routes.event.path=/event/**
zuul.routes.notification.service-id=notification-microservice
zuul.routes.notification.path=/notification/**
zuul.ignored-headers = Access-Control-Allow-Credentials, Access-Control-Allow-Origin

#docker didnt change the variables for some reason
#change to localhost for local use?
eureka.client.service-url.defaultZone=http://${EUREKA-SERVER:localhost}:8761/eureka